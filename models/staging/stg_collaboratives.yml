version: 2

models:
    - name: stg_collaboratives
      description: Collaborative creations/geniallys by different users.
      columns:
        - name: collaborative_id
          description: Primary key for collaboratives.
          tests:
            - unique
            - not_null

        - name: collaborator_email
          description: Email of the user taking part of the collaboration.

        - name: collaboration_type
          description: "{{ doc('collaboration_type') }}"

        - name: name
          description: Genially name.
          tests:
            - not_null

        - name: owner_plan
          description: Owner's plan.
            {{ doc('subscription_codes') }}
          tests:
            - not_null

        - name: owner_sector
          description: Owner's sector (see data/seed_new_sector_codes.csv and data/seed_old_sector_codes.csv).
          tests:
            - not_null

        - name: owner_role
          description: Owner's role (see data/seed_new_role_codes.csv and data/seed_old_role_codes.csv).
          tests:
            - not_null

        - name: owner_country
          description: Owner's country.
          tests:
            - not_null

        - name: is_active
          description: Whether the genially is active.
          tests:
            - not_null

        - name: is_published
          description: Whether the genially has been published.
          tests:
            - not_null

        - name: is_in_social_profile
          description: Whether the genially is shown in owner's social profile.
          tests:
            - not_null

        - name: is_visualized_last_90_days
          description: Whether the genially has been visualized within the last 90 days.
          tests:
            - not_null

        - name: is_visualized_last_60_days
          description: Whether the genially has been visualized within the last 60 days.
          tests:
            - not_null

        - name: is_visualized_last_30_days
          description: Whether the genially has been visualized within the last 30 days.
          tests:
            - not_null

        - name: is_owner_social_profile_active
          description: Whether the social profile of the owner is active.
          tests:
            - not_null

        - name: genially_id
          description: Id of the genially referring to the collaboration.
          tests:
            - not_null
            - relationships:
                to: ref('stg_geniallys')
                field: genially_id

        - name: user_id
          description: Id of a user taking part of the collaboration, that is, the collaborator.
            You can send an invitation to people who has not signed up yet, so this field is empty.
          tests:
            - not_null:
                where: "collaboration_type = 4"
                severity: warn # TODO: 2 records do not point to a team member

            - relationships:
                to: ref('stg_users')
                field: user_id

        - name: user_owner_id
          description: Id of the user that is owner of the collaborative genially.
          tests:
            - not_null
            - relationships:
                to: ref('stg_users')
                field: user_id

        - name: collaborative_team_id
          description: Id of the team where the collaboration happens.

        - name: genially_team_id
          description: Id of the team where the collaboration happens (data coming from stg_geniallys).

        - name: genially_space_id
          description: Id of the space where the collaboration happens (data coming from stg_geniallys).
          tests:
            - not_null:
                where: collaboration_type = 4
            - relationships:
                to: ref('stg_team_spaces')
                field: team_space_id

        - name: created_at
          description: When the genially was shared with the user id for collaboration.

      tests:
        - dbt_utils.expression_is_true:
            expression: "collaborative_team_id is null and genially_team_id is null"
            condition: "collaboration_type = 1"
            severity: warn # TODO: https://github.com/Genially/scrum-genially/issues/8027

        - dbt_utils.expression_is_true:
            expression: "collaborative_team_id is not null
              and genially_team_id is not null
              and collaborative_team_id = genially_team_id"
            condition: "collaboration_type = 4"
