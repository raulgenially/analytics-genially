version: 2

models:
  - name: src_genially_collaboratives
    description: Collaborative creations/geniallys by different users.
    columns:
      - name: collaborative_id
        description: Primary key for collaboratives.
        tests:
          - unique
          - not_null

      - name: collaboration_type
        description: "{{ doc('collaboration_type') }}"
        tests:
          - not_null
          - accepted_values:
              values: "{{ get_collaboration_type_values() }}"
              quote: false

      - name: genially_id
        description: Id of the genially referring to the collaboration.
        tests:
          - not_null
          - relationships:
              to: ref('src_genially_geniallys')
              field: genially_id
              # Sometimes the geniallys and collaboratives collection is not synced
              # at the same time, having collaboratives from geniallys that are not
              # present in the other collection. This filter prevents the test from
              # failing in those cases
              where: date(created_at) < current_date()

      - name: user_id
        description: Id of a user taking part of the collaboration.
          You can send an invitation to people who is not registered, so this field is empty.
        tests:
          - not_null:
              where: collaboration_type = 4
          - relationships:
              to: ref('src_genially_team_members')
              field: team_member_id
              where: collaboration_type = 4
              # TODO: https://github.com/Genially/scrum-genially/issues/8259
              severity: warn
          - relationships:
              to: ref('src_genially_users')
              field: user_id
              where: collaboration_type = 1
              error_if: ">5"

      - name: user_owner_id
        description: Id of the user that is owner of the collaborative genially.
        tests:
          - not_null
          - relationships:
              to: ref('src_genially_users')
              field: user_id

      - name: team_id
        description: Id of the team formed by the people collaborating in the genially.
        tests:
          - not_null:
                where: "collaboration_type = 4"
          - relationships:
              to: ref('src_genially_teams')
              field: team_id

      - name: created_at
        description: When the genially was shared with the user id for collaboration.
        tests:
          - not_null
    tests:
      - dbt_utils.expression_is_true:
            expression: "user_owner_id != user_id"
