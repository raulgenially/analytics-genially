version: 2

models:
    - name: src_genially_licenses
      description: Information about the licenses the users purchase.
        There are many issues (shit) related to this table. Let's try to be pragmatic and pay only special attention on the newest licenses.
      columns:
        - name: license_id
          description: Primary key for licenses.
          tests:
            - unique
            - not_null

        - name: status
          description: The status of the subscription, either Finished, Pending or Canceled.
          
            **Finished** means the license has been paid and it is active.
            **Pending** means the license has an outstanding payment.
            **Canceled** means the license is no longer active.
          tests:
            - not_null
            - accepted_values:
                values: "{{ get_license_status_values() }}"

        - name: license_type
          description: Identifier of the type of license.
            This describes whether the license has a monthly or annual payment
            and the degree of feature access to the platform.
          tests:
            - not_null
            - relationships:
                to: ref('seed_license_codes')
                field: license_code

        - name: comments
          description: Notes on the license.

        - name: user_ip
          description: Ip address from which the user purchased the license.

        - name: user_id
          description: Id of the User purchasing the license.
          tests:
            - not_null
            - relationships:
                to: ref('src_genially_users')
                field: user_id
                where: "started_at >= '2017-07-01'"

        - name: payer_id
          description: Id of the user in the payment processing platform
            used (e.g. Stripe or Braintree).
          tests:
            - not_null

        - name: transaction_id
          description: Id of the transaction in the payment processing platform.
            This refers to the first payment associated with the subscription. This field is not very relevant here, though.
          tests:
            - not_null:
                where: "license_id not in ('61716017b692c60dbaaf952c', '61714d9f98f5a60d43efe33a')"
            - unique:
                where: "started_at >= '2020-06-24'"

        - name: subscription_id
          description: Id of the subscription in the payment processing platform.
          tests:
            - not_null
            - unique:
                where: "started_at >= '2019-02-04'" # We can live with this issue for older licenses.

        - name: started_at
          description: Date time the license starts.
          tests:
            - not_null

        - name: finished_at
          description: Date time the license finished - Status field set to Canceled.

        - name: manual_finished_at
          description: Finish date time set manually - Status field set to Canceled.
            Keep in mind there is a bug related to this field in admin, what affects the general quality of this table.

      tests:
      - dbt_utils.expression_is_true:
          expression: "started_at <= finished_at"
          condition: "license_id not in ('5d25ccbcfa91b90f8ed7fabd', '5955cb35518eb6141497be4b')" # The newest license dates from 2019.

      - dbt_utils.expression_is_true:
          expression: "date(finished_at) <= current_date()"
          condition: "manual_finished_at is null"

      - dbt_utils.expression_is_true:
          expression: "finished_at is null" # So confusing the status and the date but it's like that.
          condition: "status = 'Finished' and manual_finished_at is null" # Can I only use this field to determine if a license is active?

      - dbt_utils.expression_is_true:
          expression: "date_diff(current_date(), date(started_at), day) < 2 and finished_at is null" # Pending licenses should be removed after 24h if payment is not confirmed.
          condition: "status = 'Pending' and manual_finished_at is null" # Can I trust this field?

      - dbt_utils.expression_is_true:
          expression: "finished_at is not null" # Using this schema test here to group together all tests related to status.
          condition: "status = 'Canceled' and manual_finished_at is null and started_at >= '2020-02-05'" # Ok, let's be pragmatic here as there are a total of 247 cases.

      - dbt_utils.unique_combination_of_columns:
          combination_of_columns:
            - status
            - license_type
            - comments
            - user_ip
            - user_id
            - payer_id
            - transaction_id
            - subscription_id
            - started_at
            - finished_at
            - manual_finished_at
