version: 2

models:
    - name: src_genially_invoices
      description: Information about invoices.
      columns:
        - name: invoice_id
          description: Primary key for invoices.
          tests:
            - unique
            - not_null

        - name: description
          description: Description of the type of license purchased.

        - name: payer_email
          description: The email of the person paying the invoice.
          tests:
            - not_null

        - name: payer_name
          description: The name of the person paying the invoice. It can also be the email.

        - name: payer_cif
          description: The tax ID of the payer.

        - name: payer_address
          description: The payer's address.

        - name: payer_country
          description: The payer's country.
          tests:
            - not_null
            - relationships:
                to: ref('seed_country_codes')
                field: code

        - name: total
          description: Amount of monetary value paid in the currency
            specified in the currency column.
          tests:
            - not_null
            - dbt_utils.expression_is_true:
                expression: ">= 0"

        - name: total_euro
          description: The equivalent in â‚¬ of the amount specified in total.
          tests:
            - not_null
            - dbt_utils.expression_is_true:
                expression: ">= 0"

        - name: tax_rate
          description: The percentage at which the invoice is taxed.
          tests:
            - not_null:
                where: date(invoiced_at) > '{{var('invoice_tax_start_date')}}'
            - relationships:
                to: ref('seed_taxkey_taxrate')
                field: tax_rate
                where: date(invoiced_at) > '{{var('invoice_tax_start_date')}}'
            - dbt_utils.expression_is_true:
                expression: ">= 0"

        - name: tax_key
          description: Tax Idetification key.
          tests:
            - not_null:
                where: date(invoiced_at) > '{{var('invoice_tax_start_date')}}'
            - relationships:
                to: ref('seed_taxkey_taxrate')
                field: tax_key
                where: date(invoiced_at) > '{{var('invoice_tax_start_date')}}'

        - name: currency
          description: Currency in which the invoice is paid.
          tests:
            - not_null

        - name: invoice_number
          description: Unique invoice number.
          tests:
            - not_null
            - unique:
                where: "invoiced_at > timestamp('2020-01-01')"

        - name: payment_platform
          description: Payment platform used to make the payment. Either Braintree,
            Paypal or Stripe.
          tests:
            - not_null:
                where: "invoiced_at > timestamp('2020-08-15')"

        - name: is_valid_euvat_number
          description: Indicates if 'payer_cif' is validated as Intracomunitary.
          tests:
            - not_null:
                where: date(invoiced_at) > '{{var('invoice_tax_start_date')}}'

        - name: user_id
          description: Id of the user making the payment.
          tests:
            - not_null

        - name: subscription_id
          description: Id of the subscription in the payment processing platform.
            There can be more than one invoice associated with a subscription.
          tests:
            - not_null

        - name: transaction_id
          description: Id of the transaction in the payment processing platform.
            This can be duplicated due to errors in the payment processing platform. There should be a refund invoice fixing this.
          tests:
            - not_null:
                where: "invoiced_at >= '2020-01-01'"

        - name: invoiced_at
          description: Date time at which the invoice was emitted.
          tests:
            - not_null

      tests:
        - dbt_utils.expression_is_true:
            expression: "total_euro = total"
            condition: "currency = 'eur'"

        - dbt_utils.expression_is_true:
            expression: "is_valid_euvat_number is not true"
            condition: "payer_cif is null and invoiced_at > '{{var('invoice_tax_start_date')}}'"

        - dbt_utils.unique_combination_of_columns:
            combination_of_columns:
              - description
              - payer_email
              - payer_name
              - payer_cif
              - payer_address
              - payer_country
              - total
              - total_euro
              - currency
              - invoice_number
              - payment_platform
              - user_id
              - subscription_id
              - transaction_id
              - invoiced_at
