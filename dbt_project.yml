# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: 'analytics_genially'
version: '1.0.0'
config-version: 2
require-dbt-version: ">=1.0.0"

vars:
  # Constant we use in some cases to indicate that a value is not selected
  not_selected: 'Not-selected'
  # Constant we use in some cases to indicate that a value is unknown
  unknown: 'Unknown'
  # Date at which the new onboarding process was deployed
  new_onboarding_date: '2021-05-11'
  # Estimated date at which Teams feat was deployed
  team_feat_start_date: '2021-09-01'
  # Date at wich invoices with the new structure was launched
  invoice_duration_start_date: '2020-11-01'
  # Date at wich invoices with the new taxes fields was launched
  invoice_tax_start_date: '2021-12-21'
  # Date used in snapshots to represent entities that are currently active
  the_distant_future: '3000-01-01'
  # Date we started tracking user state history
  snapshot_users_start_date: '2021-12-20'
  # Initial date of OKRs analysis
  start_date_of_analysis_OKR: '2022-01-01'
  # Date from which we started gathering Snowplow page views
  snowplow_page_views_start_date: '2022-04-11' #TODO Update this once we have the user context implemented
  # Snowplow
  snowplow_web:
    # Define source data
    snowplow__atomic_schema: rt_pipeline_prod1
    snowplow__database: snowplow-genially
    # Enable activated enrichments
    snowplow__enable_iab: true
    snowplow__enable_ua: true
    snowplow__enable_yauaa: true
    # Process data from this date on based on environment
    snowplow__start_date: "{{ snowplow_utils.get_value_by_target(
                                dev_value=snowplow_utils.n_timedeltas_ago(1, 'days'),
                                default_value='2022-04-07',
                                dev_target_name='dev'
                              )
                           }}"
    snowplow__backfill_limit_days: "{{ snowplow_utils.get_value_by_target(
                                         dev_value=1,
                                         default_value=30,
                                         dev_target_name='dev'
                                       )
                                    }}"
    # Process only data with this app_id
    snowplow__app_id: ['genially-webapp']
    # Table is partitioned by collector_tstmap so we need to set this to false
    snowplow__derived_tstamp_partitioned: false


# This setting configures which "profile" dbt uses for this project.
profile: 'default'

# These configurations specify where dbt should look for different types of files.
# The `source-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
model-paths: ["models"]
analysis-paths: ["analysis"]
test-paths: ["tests"]
seed-paths: ["data"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

target-path: "target"  # directory which will store compiled SQL files
clean-targets:         # directories to be removed by `dbt clean`
    - "target"
    - "dbt_packages"


# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In this example config, we tell dbt to build all models in the example/ directory
# as tables. These settings can be overridden in the individual model files
# using the `{{ config(...) }}` macro.
models:
  analytics_genially:
    marts:
      +materialized: table
      +tags:
        - mart
    metrics:
      +materialized: table
      +tags:
        - metrics
    sources:
      +materialized: view
      +tags:
        - source
    staging:
      materialized: view
      +tags:
        - staging
    utils:
      +materialized: ephemeral
      +tags:
        - util
    adhoc:
      +materialized: ephemeral
      +tags:
        - adhoc
  snowplow_web:
    +database: "{{ 'snowplow-genially' if target.name == 'prod' else target.database }}"

seeds:
  analytics_genially:
    +tags:
      - seed

snapshots:
  analytics_genially:
    +target_project: data-genially
    +target_dataset: snapshots
